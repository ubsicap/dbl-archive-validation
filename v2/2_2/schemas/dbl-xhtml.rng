<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!--
    dbl-xhtml.rnc v2.2
    Generated by mark@mark-VirtualBox using makeRNC.py
    Generated Mon May 27 17:35:30 2019
  -->
  <!-- Standalone xhtml schema -->
  <start>
    <element>
      <anyName/>
      <ref name="simplifiedHtml"/>
    </element>
  </start>
  <!-- html -->
  <define name="simplifiedHtml">
    <oneOrMore>
      <ref name="shBlockElement"/>
    </oneOrMore>
  </define>
  <define name="shBlockElement">
    <choice>
      <ref name="shP"/>
      <ref name="shH1"/>
      <ref name="shH2"/>
      <ref name="shH3"/>
      <ref name="shUl"/>
      <ref name="shOl"/>
      <ref name="shBlockquote"/>
    </choice>
  </define>
  <define name="shP">
    <element name="p">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shH1">
    <element name="h1">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shH2">
    <element name="h2">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shH3">
    <element name="h3">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shOl">
    <element name="ol">
      <oneOrMore>
        <ref name="shLi"/>
      </oneOrMore>
    </element>
  </define>
  <define name="shUl">
    <element name="ul">
      <oneOrMore>
        <ref name="shLi"/>
      </oneOrMore>
    </element>
  </define>
  <define name="shLi">
    <element name="li">
      <mixed>
        <interleave>
          <zeroOrMore>
            <ref name="shCharMarkup"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="shBlockElement"/>
          </zeroOrMore>
        </interleave>
      </mixed>
    </element>
  </define>
  <define name="shBlockquote">
    <element name="blockquote">
      <oneOrMore>
        <ref name="shBlockElement"/>
      </oneOrMore>
    </element>
  </define>
  <define name="shCharMarkup">
    <choice>
      <ref name="shA"/>
      <ref name="shImg"/>
      <ref name="shBr"/>
      <ref name="shStrong"/>
      <ref name="shB"/>
      <ref name="shEm"/>
      <ref name="shI"/>
    </choice>
  </define>
  <define name="shA">
    <element name="a">
      <attribute name="href">
        <ref name="anyURI"/>
      </attribute>
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shImg">
    <element name="img">
      <attribute name="src">
        <ref name="anyURI"/>
      </attribute>
      <attribute name="alt">
        <ref name="lenGe1String"/>
      </attribute>
    </element>
  </define>
  <define name="shBr">
    <element name="br">
      <empty/>
    </element>
  </define>
  <define name="shStrong">
    <element name="strong">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shB">
    <element name="b">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shEm">
    <element name="em">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <define name="shI">
    <element name="i">
      <mixed>
        <zeroOrMore>
          <ref name="shCharMarkup"/>
        </zeroOrMore>
      </mixed>
    </element>
  </define>
  <!-- generic text -->
  <define name="nonEmptyString">
    <text/>
  </define>
  <define name="lenGe1String">
    <data type="string">
      <param name="minLength">1</param>
      <param name="pattern">\S(.*\S)?</param>
    </data>
  </define>
  <define name="lenGe2String">
    <data type="string">
      <param name="minLength">2</param>
      <param name="pattern">\S.*\S</param>
    </data>
  </define>
  <define name="lenGe2Le255String">
    <data type="string">
      <param name="minLength">2</param>
      <param name="maxLength">255</param>
      <param name="pattern">\S.*\S</param>
    </data>
  </define>
  <define name="lenGe1Le255String">
    <data type="string">
      <param name="minLength">1</param>
      <param name="maxLength">255</param>
      <param name="pattern">\S(.*\S)?</param>
    </data>
  </define>
  <define name="lenGe1Le1024String">
    <data type="string">
      <param name="minLength">1</param>
      <param name="maxLength">1024</param>
      <param name="pattern">\S(.*\S)?</param>
    </data>
  </define>
  <define name="lenLe255String">
    <data type="string">
      <param name="maxLength">255</param>
      <param name="pattern">\S.*\S</param>
    </data>
  </define>
  <define name="anyURI">
    <data type="anyURI"/>
  </define>
</grammar>
