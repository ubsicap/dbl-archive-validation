<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!--
    publication-structure.rnc v2.2.1
    Generated by mark@mark-VirtualBox using makeRNC.py
    Generated Sat Jul  6 19:12:48 2019
  -->
  <!-- Standalone publication_structure -->
  <start>
    <element name="structure">
      <ref name="publicationDivisionsOrContent"/>
    </element>
  </start>
  <!-- publication structure -->
  <define name="publicationDivisionsOrContent">
    <oneOrMore>
      <choice>
        <ref name="publicationStructureDivision"/>
        <ref name="publicationStructureContent"/>
      </choice>
    </oneOrMore>
  </define>
  <define name="publicationStructureDivision">
    <element name="division">
      <attribute name="name">
        <ref name="nameIdString"/>
      </attribute>
      <optional>
        <attribute name="role">
          <ref name="roleId"/>
        </attribute>
      </optional>
      <ref name="publicationDivisionsOrContent"/>
    </element>
  </define>
  <define name="publicationStructureContent">
    <element name="content">
      <interleave>
        <optional>
          <attribute name="name">
            <ref name="nameIdString"/>
          </attribute>
        </optional>
        <attribute name="src">
          <ref name="srcPathString"/>
        </attribute>
        <optional>
          <attribute name="role">
            <ref name="roleId"/>
          </attribute>
        </optional>
        <optional>
          <attribute name="srcPart">
            <ref name="srcPathPartString"/>
          </attribute>
        </optional>
      </interleave>
    </element>
  </define>
  <!-- publications text -->
  <define name="roleId">
    <choice>
      <ref name="ptReference"/>
      <ref name="nonCanonicalBookIdEnum"/>
      <ref name="knownRole"/>
      <ref name="peripheralRole"/>
      <ref name="extensionRole"/>
    </choice>
  </define>
  <define name="ptReference">
    <data type="string">
      <param name="pattern">((GEN|EXO|LEV|NUM|DEU|JOS|JDG|RUT|1SA|2SA|1KI|2KI|1CH|2CH|EZR|NEH|EST|JOB|PSA|PRO|ECC|SNG|ISA|JER|LAM|EZK|DAN|HOS|JOL|AMO|OBA|JON|MIC|NAM|HAB|ZEP|HAG|ZEC|MAL|MAT|MRK|LUK|JHN|ACT|ROM|1CO|2CO|GAL|EPH|PHP|COL|1TH|2TH|1TI|2TI|TIT|PHM|HEB|JAS|1PE|2PE|1JN|2JN|3JN|JUD|REV|TOB|JDT|ESG|WIS|SIR|BAR|LJE|S3Y|SUS|BEL|1MA|2MA|3MA|4MA|1ES|2ES|MAN|PS2|ODA|PSS|JSA|JDB|TBS|SST|DNT|BLT|EZA|5EZ|6EZ|DAG|PS3|2BA|LBA|JUB|ENO|1MQ|2MQ|3MQ|REP|4BA|LAO)(( [1-9][0-9]{0,2}(-[1-9][0-9]{0,2})?((,([1-9][0-9]{0,2}(-[1-9][0-9]{0,2})?))*))|( [1-9][0-9]{0,2}:[1-9][0-9]{0,2}(-[1-9][0-9]{0,2}(:[1-9][0-9]{0,2})?)?(,(([1-9][0-9]{0,2}(-[1-9][0-9]{0,2})?)|([1-9][0-9]{0,2}:[1-9][0-9]{0,2}(-[1-9][0-9]{0,2}(:[1-9][0-9]{0,2})?)?)))*))?)(;(((GEN|EXO|LEV|NUM|DEU|JOS|JDG|RUT|1SA|2SA|1KI|2KI|1CH|2CH|EZR|NEH|EST|JOB|PSA|PRO|ECC|SNG|ISA|JER|LAM|EZK|DAN|HOS|JOL|AMO|OBA|JON|MIC|NAM|HAB|ZEP|HAG|ZEC|MAL|MAT|MRK|LUK|JHN|ACT|ROM|1CO|2CO|GAL|EPH|PHP|COL|1TH|2TH|1TI|2TI|TIT|PHM|HEB|JAS|1PE|2PE|1JN|2JN|3JN|JUD|REV|TOB|JDT|ESG|WIS|SIR|BAR|LJE|S3Y|SUS|BEL|1MA|2MA|3MA|4MA|1ES|2ES|MAN|PS2|ODA|PSS|JSA|JDB|TBS|SST|DNT|BLT|EZA|5EZ|6EZ|DAG|PS3|2BA|LBA|JUB|ENO|1MQ|2MQ|3MQ|REP|4BA|LAO)(( [1-9][0-9]{0,2}(-[1-9][0-9]{0,2})?((,([1-9][0-9]{0,2}(-[1-9][0-9]{0,2})?))*))|( [1-9][0-9]{0,2}:[1-9][0-9]{0,2}(-[1-9][0-9]{0,2}(:[1-9][0-9]{0,2})?)?(,(([1-9][0-9]{0,2}(-[1-9][0-9]{0,2})?)|([1-9][0-9]{0,2}:[1-9][0-9]{0,2}(-[1-9][0-9]{0,2}(:[1-9][0-9]{0,2})?)?)))*))?)))*</param>
    </data>
  </define>
  <define name="knownRole">
    <choice>
      <value>sourceZip</value>
      <value>sourceFile</value>
      <value>lds</value>
      <value>ldml</value>
      <value>styles</value>
      <value>vrs</value>
    </choice>
  </define>
  <define name="extensionRole">
    <data type="string">
      <param name="pattern">X-[A-Za-z0-9][A-Za-z0-9\-]*</param>
    </data>
  </define>
  <define name="canonicalBookIdEnum">
    <choice>
      <ref name="OTBookIdEnum"/>
      <ref name="NTBookIdEnum"/>
      <ref name="DCBookIdEnum"/>
    </choice>
  </define>
  <define name="peripheralRole">
    <choice>
      <data type="string">
        <param name="pattern">(sign|concept|place)( \S(.*\S)?)?</param>
      </data>
      <value>credits</value>
    </choice>
  </define>
  <define name="OTBookIdEnum">
    <choice>
      <value>GEN</value>
      <!-- Genesis -->
      <value>EXO</value>
      <!-- Exodus -->
      <value>LEV</value>
      <!-- Leviticus -->
      <value>NUM</value>
      <!-- Numbers -->
      <value>DEU</value>
      <!-- Deuteronomy -->
      <value>JOS</value>
      <!-- Joshua -->
      <value>JDG</value>
      <!-- Judges -->
      <value>RUT</value>
      <!-- Ruth -->
      <value>1SA</value>
      <!-- 1 Samuel -->
      <value>2SA</value>
      <!-- 2 Samuel -->
      <value>1KI</value>
      <!-- 1 Kings -->
      <value>2KI</value>
      <!-- 2 Kings -->
      <value>1CH</value>
      <!-- 1 Chronicles -->
      <value>2CH</value>
      <!-- 2 Chronicles -->
      <value>EZR</value>
      <!-- Ezra -->
      <value>NEH</value>
      <!-- Nehemiah -->
      <value>EST</value>
      <!-- Esther (Hebrew) -->
      <value>JOB</value>
      <!-- Job -->
      <value>PSA</value>
      <!-- Psalms -->
      <value>PRO</value>
      <!-- Proverbs -->
      <value>ECC</value>
      <!-- Ecclesiastes -->
      <value>SNG</value>
      <!-- Song of Songs -->
      <value>ISA</value>
      <!-- Isaiah -->
      <value>JER</value>
      <!-- Jeremiah -->
      <value>LAM</value>
      <!-- Lamentations -->
      <value>EZK</value>
      <!-- Ezekiel -->
      <value>DAN</value>
      <!-- Daniel (Hebrew) -->
      <value>HOS</value>
      <!-- Hosea -->
      <value>JOL</value>
      <!-- Joel -->
      <value>AMO</value>
      <!-- Amos -->
      <value>OBA</value>
      <!-- Obadiah -->
      <value>JON</value>
      <!-- Jonah -->
      <value>MIC</value>
      <!-- Micah -->
      <value>NAM</value>
      <!-- Nahum -->
      <value>HAB</value>
      <!-- Habakkuk -->
      <value>ZEP</value>
      <!-- Zephaniah -->
      <value>HAG</value>
      <!-- Haggai -->
      <value>ZEC</value>
      <!-- Zechariah -->
      <value>MAL</value>
    </choice>
    <!-- Malachi -->
  </define>
  <define name="NTBookIdEnum">
    <choice>
      <value>MAT</value>
      <!-- Matthew -->
      <value>MRK</value>
      <!-- Mark -->
      <value>LUK</value>
      <!-- Luke -->
      <value>JHN</value>
      <!-- John -->
      <value>ACT</value>
      <!-- Acts -->
      <value>ROM</value>
      <!-- Romans -->
      <value>1CO</value>
      <!-- 1 Corinthians -->
      <value>2CO</value>
      <!-- 2 Corinthians -->
      <value>GAL</value>
      <!-- Galatians -->
      <value>EPH</value>
      <!-- Ephesians -->
      <value>PHP</value>
      <!-- Philippians -->
      <value>COL</value>
      <!-- Colossians -->
      <value>1TH</value>
      <!-- 1 Thessalonians -->
      <value>2TH</value>
      <!-- 2 Thessalonians -->
      <value>1TI</value>
      <!-- 1 Timothy -->
      <value>2TI</value>
      <!-- 2 Timothy -->
      <value>TIT</value>
      <!-- Titus -->
      <value>PHM</value>
      <!-- Philemon -->
      <value>HEB</value>
      <!-- Hebrews -->
      <value>JAS</value>
      <!-- James -->
      <value>1PE</value>
      <!-- 1 Peter -->
      <value>2PE</value>
      <!-- 2 Peter -->
      <value>1JN</value>
      <!-- 1 John -->
      <value>2JN</value>
      <!-- 2 John -->
      <value>3JN</value>
      <!-- 3 John -->
      <value>JUD</value>
      <!-- Jude -->
      <value>REV</value>
    </choice>
    <!-- Revelation -->
  </define>
  <define name="DCBookIdEnum">
    <choice>
      <value>TOB</value>
      <!-- Tobit -->
      <value>JDT</value>
      <!-- Judith -->
      <value>ESG</value>
      <!-- Esther Greek -->
      <value>WIS</value>
      <!-- Wisdom of Solomon -->
      <value>SIR</value>
      <!-- Sirach (Ecclesiasticus) -->
      <value>BAR</value>
      <!-- Baruch -->
      <value>LJE</value>
      <!-- Letter of Jeremiah -->
      <value>S3Y</value>
      <!-- Song of 3 Young Men -->
      <value>SUS</value>
      <!-- Susanna -->
      <value>BEL</value>
      <!-- Bel and the Dragon -->
      <value>1MA</value>
      <!-- 1 Maccabees -->
      <value>2MA</value>
      <!-- 2 Maccabees -->
      <value>3MA</value>
      <!-- 3 Maccabees -->
      <value>4MA</value>
      <!-- 4 Maccabees -->
      <value>1ES</value>
      <!-- 1 Esdras (Greek) -->
      <value>2ES</value>
      <!-- 2 Esdras (Latin) -->
      <value>MAN</value>
      <!-- Prayer of Manasseh -->
      <value>PS2</value>
      <!-- Psalm 151 -->
      <value>ODA</value>
      <!-- Odes -->
      <value>PSS</value>
      <!-- Psalms of Solomon -->
      <value>JSA</value>
      <!-- actual variant text for JOS, now in LXA text -->
      <value>JDB</value>
      <!-- actual variant text for JDG, now in LXA text -->
      <value>TBS</value>
      <!-- actual variant text for TOB, now in LXA text -->
      <value>SST</value>
      <!-- actual variant text for SUS, now in LXA text -->
      <value>DNT</value>
      <!-- actual variant text for DAN, now in LXA text -->
      <value>BLT</value>
      <!-- actual variant text for BEL, now in LXA text -->
      <value>EZA</value>
      <!-- Apocalypse of Ezra -->
      <value>5EZ</value>
      <!-- 5 Ezra -->
      <value>6EZ</value>
      <!-- 6 Ezra -->
      <value>DAG</value>
      <!-- Daniel Greek -->
      <value>PS3</value>
      <!-- Psalms 152-155 -->
      <value>2BA</value>
      <!-- 2 Baruch (Apocalypse) -->
      <value>LBA</value>
      <!-- Letter of Baruch -->
      <value>JUB</value>
      <!-- Jubilees -->
      <value>ENO</value>
      <!-- Enoch -->
      <value>1MQ</value>
      <!-- 1 Meqabyan -->
      <value>2MQ</value>
      <!-- 2 Meqabyan -->
      <value>3MQ</value>
      <!-- 3 Meqabyan -->
      <value>REP</value>
      <!-- Reproof -->
      <value>4BA</value>
      <!-- 4 Baruch -->
      <value>LAO</value>
    </choice>
    <!-- Laodiceans -->
  </define>
  <define name="nonCanonicalBookIdEnum">
    <choice>
      <value>XXA</value>
      <!-- Extra A, e.g. a hymnal -->
      <value>XXB</value>
      <!-- Extra B -->
      <value>XXC</value>
      <!-- Extra C -->
      <value>XXD</value>
      <!-- Extra D -->
      <value>XXE</value>
      <!-- Extra E -->
      <value>XXF</value>
      <!-- Extra F -->
      <value>XXG</value>
      <!-- Extra G -->
      <value>FRT</value>
      <!-- Front Matter -->
      <value>BAK</value>
      <!-- Back Matter -->
      <value>OTH</value>
      <!-- Other Matter -->
      <value>INT</value>
      <!-- Introduction -->
      <value>CNC</value>
      <!-- Concordance -->
      <value>GLO</value>
      <!-- Glossary -->
      <value>TDX</value>
      <!-- Topical Index -->
      <value>NDX</value>
    </choice>
    <!-- Names Index -->
  </define>
  <define name="publicationId">
    <data type="string">
      <param name="pattern">[A-Za-z][A-Za-z0-9_\-]{0,31}</param>
    </data>
  </define>
  <!-- generic text -->
  <define name="nonEmptyString">
    <text/>
  </define>
  <define name="lenGe1String">
    <data type="string">
      <param name="minLength">1</param>
      <param name="pattern">\S(.*\S)?</param>
    </data>
  </define>
  <define name="lenGe2String">
    <data type="string">
      <param name="minLength">2</param>
      <param name="pattern">\S.*\S</param>
    </data>
  </define>
  <define name="lenGe2Le255String">
    <data type="string">
      <param name="minLength">2</param>
      <param name="maxLength">255</param>
      <param name="pattern">\S.*\S</param>
    </data>
  </define>
  <define name="lenGe1Le255String">
    <data type="string">
      <param name="minLength">1</param>
      <param name="maxLength">255</param>
      <param name="pattern">\S(.*\S)?</param>
    </data>
  </define>
  <define name="lenGe1Le1024String">
    <data type="string">
      <param name="minLength">1</param>
      <param name="maxLength">1024</param>
      <param name="pattern">\S(.*\S)?</param>
    </data>
  </define>
  <define name="lenLe255String">
    <data type="string">
      <param name="maxLength">255</param>
      <param name="pattern">\S.*\S</param>
    </data>
  </define>
  <define name="anyURI">
    <data type="anyURI"/>
  </define>
  <!-- name text -->
  <define name="nameIdString">
    <data type="string">
      <param name="pattern">[A-Za-z][\-A-Za-z0-9_+]+</param>
    </data>
  </define>
  <!-- source text -->
  <define name="srcPathString">
    <data type="string">
      <param name="pattern">[A-Za-z0-9][\-A-Za-z0-9_+\.]+(/[A-Za-z0-9][\-A-Za-z0-9_+\.]+)*</param>
    </data>
  </define>
  <define name="srcPathPartString">
    <data type="string">
      <param name="pattern">(((zip|xpath)://)|#).+</param>
    </data>
  </define>
</grammar>
