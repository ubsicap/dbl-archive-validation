  simplifiedHtml = (
    shP |
    shH1 |
    shH2 |
    shH3 |
    shUl |
    shOl |
    shBlockquote |
    shHtmlCharMarkup
)

shP = element p { (text | shHtmlCharMarkup)+ }

shH1 = element h1 { text }

shH2 = element h2 { text }

shH3 = element h3 { text }

shOl = element ol { shLi+ }

shUl = element ul { shLi+ }

shLi = element li { text }

shBlockquote = element blockquote { text }

shHtmlCharMarkup = (
  text |
  shA |
  shImg |
  shBr |
  shStrong |
  shB |
  shEm |
  shI
)

shA =
  element a {
    attribute href { xsd:anyURI },
    shHtmlCharMarkup
  }

shImg =
  element img {
    attribute src { xsd:anyURI },
    attribute alt { text }
  }

shBr = element br { empty }

shStrong = element strong { text }

shB = element b { text }

shEm = element em { text }

shI = element i { text }

lenGe2String = xsd:string { minLength = "2" }

lenGe2Le255String = xsd:string { minLength = "2" maxLength = "255" }

lenLe255String = xsd:string { maxLength = "255" }

bundleIdString = xsd:string { pattern = "[a-f0-9]{16}" }

abbreviationString = xsd:string { pattern = "[\-A-Za-z0-9]{2,12}" }

localAbbreviationString = xsd:string { minLength = "2" maxLength = "12" }

languageIsoString = xsd:string { pattern = "[a-z][a-z][a-z]" }

ldmlString = xsd:string { pattern = "[A-Za-z]{2,3}([\-_][A-Za-z0-9]+){0,3}" }

rodString = xsd:string { pattern = "[0-9]{5}" }

countryIsoString = xsd:string { pattern = "[A-Z][A-Z][A-Z]" }

measurementString = xsd:string { pattern = "[1-9][0-9]{1,4}mm" }

nameIdString = xsd:string { pattern = "[A-Za-z][\-A-Za-z0-9_]+" }

md5String = xsd:string { pattern = "[a-f0-9]{32}" }

mimeTypeString = xsd:string { pattern = "[\-a-z0-9]+/[\-a-z0-9+]+" }

percentageString = xsd:string { pattern = "[1-9][0-9]{1,3}%" }

biblicaId = xsd:string { pattern = "\s*[1-9][0-9]{0,4}\s*" }

gbcId = xsd:string { pattern = "\s*[0-9a-f]{24}\s*" }

tmsId = xsd:string { pattern = "\s*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\s*" }

ptId = xsd:string { pattern = "\s*[0-9a-f]{40}\s*" }

reapId = xsd:anyURI