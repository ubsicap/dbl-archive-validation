  simplifiedHtml = (
    shP |
    shH1 |
    shH2 |
    shH3 |
    shUl |
    shOl |
    shBlockquote |
    shHtmlCharMarkup
)

shP = element p { (text | shHtmlCharMarkup)+ }

shH1 = element h1 { text }

shH2 = element h2 { text }

shH3 = element h3 { text }

shOl = element ol { shLi+ }

shUl = element ul { shLi+ }

shLi = element li { text }

shBlockquote = element blockquote { text }

shHtmlCharMarkup = (
  text |
  shA |
  shImg |
  shBr |
  shStrong |
  shB |
  shEm |
  shI
)

shA =
  element a {
    attribute href { xsd:anyURI },
    shHtmlCharMarkup
  }

shImg =
  element img {
    attribute src { xsd:anyURI },
    attribute alt { text }
  }

shBr = element br { empty }

shStrong = element strong { text }

shB = element b { text }

shEm = element em { text }

shI = element i { text }

lenGe2String = xsd:string { minLength = "2" }

lenGe2Le255String = xsd:string { minLength = "2" maxLength = "255" }

lenLe255String = xsd:string { maxLength = "255" }

bundleIdString = xsd:string { pattern = "[a-f0-9]{16}" }

abbreviationString = xsd:string { pattern = "[\-A-Za-z0-9]{2,12}" }

localAbbreviationString = xsd:string { minLength = "2" maxLength = "12" }

languageIsoString = xsd:string { pattern = "[a-z][a-z][a-z]" }

ldmlString = xsd:string { pattern = "[A-Za-z]{2,3}([\-_][A-Za-z0-9]+){0,3}" }

rodString = xsd:string { pattern = "[0-9]{5}" }

countryIsoString = xsd:string { pattern = "[A-Z][A-Z][A-Z]" }

measurementString = xsd:string { pattern = "[1-9][0-9]{1,4}mm" }

nameIdString = xsd:string { pattern = "[A-Za-z][\-A-Za-z0-9_]+" }

md5String = xsd:string { pattern = "[a-f0-9]{32}" }

mimeTypeString = xsd:string { pattern = "[\-a-z0-9]+/[\-a-z0-9+]+" }

percentageString = xsd:string { pattern = "[1-9][0-9]{1,3}%" }

biblicaId = xsd:string { pattern = "\s*[1-9][0-9]{0,4}\s*" }

gbcId = xsd:string { pattern = "\s*[0-9a-f]{24}\s*" }

tmsId = xsd:string { pattern = "\s*[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\s*" }

ptId = xsd:string { pattern = "\s*[0-9a-f]{40}\s*" }

reapId = xsd:anyURI

roleId = bookIdEnum | ptReference | knownRole | extensionRole

bookIdEnum = (canonicalBookIdEnum | nonCanonicalBookIdEnum)

canonicalBookIdEnum = (OTBookIdEnum | NTBookIdEnum | DCBookIdEnum)

OTBookIdEnum = (
  "GEN" | # Genesis
  "EXO" | # Exodus
  "LEV" | # Leviticus
  "NUM" | # Numbers
  "DEU" | # Deuteronomy
  "JOS" | # Joshua
  "JDG" | # Judges
  "RUT" | # Ruth
  "1SA" | # 1 Samuel
  "2SA" | # 2 Samuel
  "1KI" | # 1 Kings
  "2KI" | # 2 Kings
  "1CH" | # 1 Chronicles
  "2CH" | # 2 Chronicles
  "EZR" | # Ezra
  "NEH" | # Nehemiah
  "EST" | # Esther (Hebrew)
  "JOB" | # Job
  "PSA" | # Psalms
  "PRO" | # Proverbs
  "ECC" | # Ecclesiastes
  "SNG" | # Song of Songs
  "ISA" | # Isaiah
  "JER" | # Jeremiah
  "LAM" | # Lamentations
  "EZK" | # Ezekiel
  "DAN" | # Daniel (Hebrew)
  "HOS" | # Hosea
  "JOL" | # Joel
  "AMO" | # Amos
  "OBA" | # Obadiah
  "JON" | # Jonah
  "MIC" | # Micah
  "NAM" | # Nahum
  "HAB" | # Habakkuk
  "ZEP" | # Zephaniah
  "HAG" | # Haggai
  "ZEC" | # Zechariah
  "MAL"   # Malachi
)

NTBookIdEnum = (
  "MAT" | # Matthew
  "MRK" | # Mark
  "LUK" | # Luke
  "JHN" | # John
  "ACT" | # Acts
  "ROM" | # Romans
  "1CO" | # 1 Corinthians
  "2CO" | # 2 Corinthians
  "GAL" | # Galatians
  "EPH" | # Ephesians
  "PHP" | # Philippians
  "COL" | # Colossians
  "1TH" | # 1 Thessalonians
  "2TH" | # 2 Thessalonians
  "1TI" | # 1 Timothy
  "2TI" | # 2 Timothy
  "TIT" | # Titus
  "PHM" | # Philemon
  "HEB" | # Hebrews
  "JAS" | # James
  "1PE" | # 1 Peter
  "2PE" | # 2 Peter
  "1JN" | # 1 John
  "2JN" | # 2 John
  "3JN" | # 3 John
  "JUD" | # Jude
  "REV"   # Revelation
)

DCBookIdEnum = (
  "TOB" | # Tobit
  "JDT" | # Judith
  "ESG" | # Esther Greek
  "WIS" | # Wisdom of Solomon
  "SIR" | # Sirach (Ecclesiasticus)
  "BAR" | # Baruch
  "LJE" | # Letter of Jeremiah
  "S3Y" | # Song of 3 Young Men
  "SUS" | # Susanna
  "BEL" | # Bel and the Dragon
  "1MA" | # 1 Maccabees
  "2MA" | # 2 Maccabees
  "3MA" | # 3 Maccabees
  "4MA" | # 4 Maccabees
  "1ES" | # 1 Esdras (Greek)
  "2ES" | # 2 Esdras (Latin)
  "MAN" | # Prayer of Manasseh
  "PS2" | # Psalm 151
  "ODA" | # Odes
  "PSS" | # Psalms of Solomon
  "JSA" | # actual variant text for JOS, now in LXA text
  "JDB" | # actual variant text for JDG, now in LXA text
  "TBS" | # actual variant text for TOB, now in LXA text
  "SST" | # actual variant text for SUS, now in LXA text
  "DNT" | # actual variant text for DAN, now in LXA text
  "BLT" | # actual variant text for BEL, now in LXA text
  "EZA" | # Apocalypse of Ezra
  "5EZ" | # 5 Ezra
  "6EZ" | # 6 Ezra
  "DAG" | # Daniel Greek
  "PS3" | # Psalms 152-155
  "2BA" | # 2 Baruch (Apocalypse)
  "LBA" | # Letter of Baruch
  "JUB" | # Jubilees
  "ENO" | # Enoch
  "1MQ" | # 1 Meqabyan
  "2MQ" | # 2 Meqabyan
  "3MQ" | # 3 Meqabyan
  "REP" | # Reproof
  "4BA" | # 4 Baruch
  "LAO"   # Laodiceans
)

nonCanonicalBookIdEnum = (
  "XXA" | # Extra A, e.g. a hymnal
  "XXB" | # Extra B
  "XXC" | # Extra C
  "XXD" | # Extra D
  "XXE" | # Extra E
  "XXF" | # Extra F
  "XXG" | # Extra G
  "FRT" | # Front Matter
  "BAK" | # Back Matter
  "OTH" | # Other Matter
  "INT" | # Introduction
  "CNC" | # Concordance
  "GLO" | # Glossary
  "TDX" | # Topical Index
  "NDX"   # Names Index
)

ptReference = xsd:string { pattern = "[A-Z1-6]{3}(\.[1-9][0-9]*(-[1-9][0-9]*)?)?" } # Eventually use PT regex

knownRole = "sourceZip" | "sourceFile"

extensionRole = xsd:string { pattern = "X-[A-Za-z0-9][A-Za-z0-9\-]*" }
